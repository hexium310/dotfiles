[[plugins]]
repo = 'Shougo/dein.vim'
lua_add = '''
  local dein = require('dein')

  vim.api.nvim_create_user_command('DeinUpdate', function () dein.update() end, { nargs = 0 })
  vim.api.nvim_create_user_command('DeinRecache', function () dein.recache_runtimepath() end, { nargs = 0 })
  vim.api.nvim_create_autocmd('VimEnter', {
    callback = function ()
      vim.schedule(function ()
        dein.call_hook('post_source')
      end)
    end,
  })
'''

[[plugins]]
repo = 'RRethy/nvim-base16'

[[plugins]]
repo = 'ii14/onedark.nvim'

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
on_event = ['VimEnter']
lua_post_source = '''
  require('plugins/lualine')
'''

[[plugins]]
repo = 'luukvbaal/statuscol.nvim'
on_event = ['BufRead']
lua_post_source = '''
  require('plugins/statuscol')
'''

[[plugins]]
repo = 'stevearc/dressing.nvim'
on_event = ['BufRead']
lua_post_source = '''
  require('plugins/dressing')
'''

[[plugins]]
repo = 'NvChad/nvim-colorizer.lua'
on_event = ['BufRead']
lua_post_source = '''
  require('plugins/colorizer')
'''

[[plugins]]
repo = 'qpkorr/vim-bufkill'
on_event = ['CmdlineEnter']
lua_add = '''
  vim.keymap.set('ca', 'bd', 'BD')
'''

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_map = ['gJ', 'gS']
lua_add = '''
  vim.g.splitjoin_html_attributes_bracket_on_new_line = 1
'''

[[plugins]]
repo = 'chaoren/vim-wordmotion'
on_map = ['<Plug>WordMotion']
lua_add = '''
  vim.g.wordmotion_nomap = 1
  require('plugins/utils').set_keymaps({
    { 'n', 'w', '<Plug>WordMotion_w' },
    { 'n', 'b', '<Plug>WordMotion_b' },
    { 'n', 'e', '<Plug>WordMotion_e' },
    { 'n', 'ge', '<Plug>WordMotion_ge' },
  }, { remap = true })
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'
on_map = ['f', 'F', 't', 'T']
lua_add = '''
  vim.g.clever_f_use_migemo = 1
  vim.g.clever_f_fix_key_direction = 1
  require('plugins/utils').set_keymaps({
    { 'n', ';', '<Plug>(clever-f-repeat-forward)' },
    { 'n', ',', '<Plug>(clever-f-repeat-back)' },
  }, { remap = true })
'''

[[plugins]]
repo = 'nishigori/increment-activator'
on_map = ['<C-a>', '<C-x>']

[[plugins]]
repo = 'tversteeg/registers.nvim'
rev = 'f354159'
on_map = {
  nv = '"',
  i = '<C-r>',
}
on_cmd = ['Registers']
on_event = ['InsertEnter']
lua_add = '''
  vim.g.registers_window_min_height = 15
  vim.g.registers_window_border = 'single'
'''

[[plugins]]
repo = 'ibhagwan/fzf-lua'
on_map = [
  '<C-p>',
  '<Space><C-m>',
  '<Space>e'
]
on_cmd = [
  'FzfLua',
  'Rg',
  'Commits',
  'BCommits',
]
lua_post_source = '''
  require('plugins/fzf')
'''

[[plugins]]
repo = 'akinsho/nvim-toggleterm.lua'
on_cmd = [
  'ToggleTerm',
  'TermExec',
  'Yarn',
]
on_map = {
  ni = '<C-t>',
}
lua_post_source = '''
  require('plugins/toggleterm')
'''

[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
on_ft = 'qf'
lua_post_source = '''
  require('plugins/bqf')
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = ['InsertEnter']
lua_post_source = '''
  require('plugins/autopairs')
'''

[[plugins]]
repo = 'numToStr/Comment.nvim'
on_map = ['gb', 'gc']
lua_post_source = '''
  require('plugins/comment')
'''

[[plugins]]
repo = 'andymass/vim-matchup'
on_event = ['BufRead']
lua_add = '''
  vim.g.matchup_matchparen_offscreen = {}
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
on_func = [
  'FugitiveGitDir'
]
on_cmd = [
  'G',
  'Git',
  'Ggrep',
  'Glgrep',
  'Gclog',
  'Gllog',
  'Gcd',
  'Glcd',
  'Gedit',
  'Gsplit',
  'Gvsplit',
  'Gtabedit',
  'Gpedit',
  'Gread',
  'Gwrite',
  'Gwq',
  'Gdiffsplit',
  'Gvdiffsplit',
  'Ghdiffsplit',
  'GMove',
  'GRename',
  'GDelete',
  'GRemove',
  'GBrowse',
]
lua_add ='''
  require('plugins/fugitive')
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = ['BufRead']
lua_post_source = '''
  require('plugins/gitsigns')
'''

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
on_event = ['BufRead']
lua_add = '''
  vim.g.conflict_marker_enable_mappings = 0
  vim.g.conflict_marker_highlight_group = ''
  vim.g.conflict_marker_begin = '^<<<<<<< .*$'
  vim.g.conflict_marker_end   = '^>>>>>>> .*$'
  vim.g.conflict_marker_common_ancestors = '^||||||| .*$'
  require('plugins/utils').set_keymaps({
    { 'n', ']f', '<Plug>(conflict-marker-next-hunk)' },
    { 'n', '[f', '<Plug>(conflict-marker-prev-hunk)' },
  }, { remap = true })
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_lua = ['plenary']

[[plugins]]
repo = 'notomo/lreload.nvim'
on_ft = ['lua']
lua_post_source = '''
  require('lreload').enable('plugins')
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = ['BufRead', 'CmdlineEnter']
lua_post_source = '''
  require('plugins/lsp')
'''

# Lazy-loading this plugin is not recommended.
[[plugins]]
repo = 'williamboman/mason.nvim'
lua_post_source = '''
  require('plugins/mason')
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
depends = ['mason.nvim', 'nvim-lspconfig']
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
depends = ['plenary.nvim']
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
on_source = ['nvim-lspconfig']
lua_post_source = '''
  require('plugins/lsp/signature')
'''

[[plugins]]
repo = 'hrsh7th/nvim-cmp'
on_event = ['InsertEnter']
lua_post_source = '''
  require('plugins/cmp')
'''

[[plugins]]
repo = 'L3MON4D3/LuaSnip'
on_source = ['nvim-cmp']
build = '''
  make install_jsregexp
'''
lua_post_source = '''
  require('plugins/luasnip')
'''

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = ['nvim-cmp']

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = ['nvim-cmp']

[[plugins]]
repo = 'hexium310/diffmt.nvim'
lua_add = '''
  vim.api.nvim_create_user_command('Diffmt', function() require('diffmt').diff() end, {})
'''

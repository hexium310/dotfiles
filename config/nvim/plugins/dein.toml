[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  command! -nargs=0 DeinUpdate call s:dein_update()
  command! -nargs=0 DeinRecache call dein#recache_runtimepath()

  function s:dein_update() abort
    call dein#update()
    let buf = nvim_create_buf(v:false, v:true)
    split
    call nvim_set_current_buf(buf)
    put! ='Updating...'
    call dein#set_hook([], 'hook_done_update', 'call Display_updates_log(' . buf . ')')
  endfunction

  function! Display_updates_log(buf) abort
    let log = dein#get_updates_log()
    call nvim_buf_set_lines(a:buf, 0, -1, v:true, add(split(log, "\n"), ""))
  endfunction
'''

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  call plugin#lightline#set_variables()
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  let g:clever_f_use_migemo = 1
  let g:clever_f_fix_key_direction = 1
  map ; <Plug>(clever-f-repeat-forward)
  map , <Plug>(clever-f-repeat-back)
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  let g:context_filetype#filetypes = {
        \   'typescript.tsx': [
        \     {
        \       'start': '\v(styled\..*|css)`',
        \       'end': '`',
        \       'filetype': 'sass',
        \     },
        \   ],
        \ }
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'mattn/emmet-vim'
lazy = 1
on_ft = ['html', 'php', 'css', 'javascript', 'typescript', 'typescriptreact']
hook_add = '''
  let g:user_emmet_settings = {
        \  'javascript': {
        \    'extends': 'jsx',
        \  },
        \  'typescript': {
        \    'extends': 'jsx',
        \  },
        \  'typescriptreact': {
        \    'extends': 'jsx',
        \  },
        \  'variables': {
        \    'lang': 'ja',
        \  },
        \}
  let g:user_emmet_leader_key = '<silent> <C-e>'
  imap <C-e> <Nop>
  nmap <C-e> <Nop>
  vmap <C-e> <Nop>
  const items = [
        \ {'key': ',', 'plug': 'emmet-expand-abbr'},
        \ {'key': ';', 'plug': 'emmet-expand-word'},
        \ {'key': 'u', 'plug': 'emmet-update-tag'},
        \ {'key': 'd', 'plug': 'emmet-balance-tag-inward'},
        \ {'key': 'D', 'plug': 'emmet-balance-tag-outword'},
        \ {'key': 'n', 'plug': 'emmet-move-next'},
        \ {'key': 'N', 'plug': 'emmet-move-prev'},
        \ {'key': 'i', 'plug': 'emmet-image-size'},
        \ {'key': 'I', 'plug': 'emmet-image-encode'},
        \ {'key': '/', 'plug': 'emmet-toggle-comment'},
        \ {'key': 'j', 'plug': 'emmet-split-join-tag'},
        \ {'key': 'k', 'plug': 'emmet-remove-tag'},
        \ {'key': 'a', 'plug': 'emmet-anchorize-url'},
        \ {'key': 'A', 'plug': 'emmet-anchorize-summary'},
        \ {'key': 'm', 'plug': 'emmet-merge-lines'},
  \ ]
  for item in items
    execute 'imap <silent><expr> <C-e>' . item.key . ' pumvisible() ? "\<C-y><Plug>(' . item.plug . ')" : "\<Plug>(' . item.plug . ')"'
  endfor
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap <silent> <Esc><Esc> <Plug>(anzu-clear-search-status):nohlsearch<Cr>
  nmap n <Plug>(anzu-n)zz
  nmap N <Plug>(anzu-N)zz
  nmap * <Plug>(anzu-star)zz
  nmap # <Plug>(anzu-sharp)zz

  augroup vim-anzu
    autocmd!
    autocmd WinLeave, TabLeave * call anzu#clear_search_status()
  augroup END
'''

[[plugins]]
repo = 'kana/vim-operator-user'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'kana/vim-operator-replace'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)
  nmap <silent>sd <Plug>(operator-surround-delete)
  nmap <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'haya14busa/vim-operator-flashy'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  map y <Plug>(operator-flashy)
'''

[[plugins]]
repo = 'emonkak/vim-operator-sort'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  nmap so <Plug>(operator-sort)
  vmap so <Plug>(operator-sort)
'''

[[plugins]]
repo = 'kana/vim-textobj-user'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'rhysd/vim-textobj-anyblock'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'kana/vim-textobj-indent'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'kana/vim-textobj-line'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'kana/vim-textobj-entire'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'Julian/vim-textobj-variable-segment'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'glts/vim-textobj-comment'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  let g:textobj_comment_no_default_key_mappings = 1

  xmap ac <Plug>(textobj-comment-a)
  omap ac <Plug>(textobj-comment-a)
'''

[[plugins]]
repo = 'tyru/caw.vim'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  let g:caw_operator_keymappings = 1
'''

[[plugins]]
repo = 'w0rp/ale'
lazy = 1
on_ft = ['javascript', 'typescript', 'typescriptreact']
hook_add = '''
  call plugin#ale#set_variable()
  call plugin#ale#set_maps()
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
hook_add ='''
  call plugin#coc#set_variables()
  call plugin#coc#set_maps()
  call plugin#coc#set_commands()
  call plugin#coc#autocmd()
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['ale', 'lightline']
lazy = 1
on_ft = ['typescript', 'typescriptreact']
hook_add = '''
  let g:lightline#ale#indicator_checking = '...'
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
lazy = 1
on_if = 'executable("fzf")'
on_event = 'BufEnter'
hook_add = '''
  set runtimepath+=$ZPLG_HOME/plugins/junegunn---fzf
  call plugin#fzf#set_variables()
  call plugin#fzf#set_maps()
  call plugin#fzf#set_commands()
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  call plugin#gitgutter#set_variables()
  call plugin#gitgutter#set_maps()
'''

[[plugins]]
repo = 'chriskempson/base16-vim'
hook_add = '''
  let g:base16colorspace = 256
'''

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'Yggdroot/indentLine'
lazy = 1
on_event = 'BufEnter'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
lazy = 1
on_event = 'BufEnter'
hook_add = '''
  let g:conflict_marker_enable_mappings = 0
  let g:conflict_marker_enable_highlight = 0
  nmap ]f <Plug>(conflict-marker-next-hunk)
  nmap [f <Plug>(conflict-marker-prev-hunk)
'''

[[plugins]]
repo = 'wordijp/vim-vimscript-scope-syntax'
hook_add = '''
  let g:vimscript_scope_syntax_auto_enable = 0
  highlight link vimGlobalVar String
  highlight link vimScriptVar Special
  highlight link vimLocalVar Identifier
  highlight link vimArgsVar Type
  highlight link vimBufVar vimGlobalVar
  highlight link vimWinVar None
  highlight link vimTabVar None
  highlight link vimVVar None
'''

[[plugins]]
repo = 'kana/vim-tabpagecd'

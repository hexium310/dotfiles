[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  command! -nargs=0 DeinUpdate call s:dein_update()
  command! -nargs=0 DeinRecache call dein#recache_runtimepath()

  function s:dein_update() abort
    call dein#update()

    let buf = nvim_create_buf(v:false, v:true)
    split
    call nvim_set_current_buf(buf)
    put! ='Updating...'
    call dein#set_hook([], 'hook_done_update', 'call Display_updates_log(' . buf . ')')
  endfunction

  function! Display_updates_log(buf) abort
    let log = dein#get_updates_log()
    call nvim_buf_set_lines(a:buf, 0, -1, v:true, add(split(log, "\n"), ""))
  endfunction

  autocmd VimEnter * lua vim.schedule(function () vim.fn['dein#call_hook']('post_source') end)
'''

[[plugins]]
repo = 'nathom/filetype.nvim'
hook_post_source = '''
  lua require('plugins/filetype')
'''

[[plugins]]
repo = 'RRethy/nvim-base16'

[[plugins]]
repo = 'ii14/onedark.nvim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufRead']

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
on_event = ['VimEnter']
hook_post_source = '''
  lua require('plugins/lualine')
'''

[[plugins]]
repo = 'RRethy/vim-hexokinase'
if = 'executable("go")'
on_event = ['BufRead']
build = '''
  make hexokinase
'''
hook_add = '''
  let g:Hexokinase_virtualText = '‚óè'
  let g:Hexokinase_ftAutoload = ['*']
  let g:Hexokinase_refreshEvents = ['BufEnter', 'TextChanged', 'TextChangedI']
'''

[[plugins]]
repo = 'qpkorr/vim-bufkill'
on_event = ['CmdlineEnter']
hook_add = '''
  cabbrev bd BD
'''

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_map = ['gJ', 'gS']
hook_add = '''
  let g:splitjoin_html_attributes_bracket_on_new_line = 1
'''

[[plugins]]
repo = 'chaoren/vim-wordmotion'
on_map = ['<Plug>WordMotion']
hook_add = '''
  let g:wordmotion_nomap = 1
  nmap w <Plug>WordMotion_w
  nmap b <Plug>WordMotion_b
  nmap e <Plug>WordMotion_e
  nmap ge <Plug>WordMotion_ge
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'
on_map = ['f', 'F', 't', 'T']
hook_add = '''
  let g:clever_f_use_migemo = 1
  let g:clever_f_fix_key_direction = 1
  map ; <Plug>(clever-f-repeat-forward)
  map , <Plug>(clever-f-repeat-back)
'''

[[plugins]]
repo = 'nishigori/increment-activator'
on_map = ['<C-a>', '<C-x>']

[[plugins]]
repo = 'tversteeg/registers.nvim'
on_map = {
  nv = '"',
  i = '<C-r>',
}
on_cmd = ['Registers']
hook_add = '''
  let g:registers_window_min_height = 15
  let g:registers_window_border = 'single'
'''

[[plugins]]
repo = '$FZF_HOME'
if = 'executable("fzf")'
on_func = ['fzf#']
# Don't update by dein because fzf is managed with a plugin manager for Zsh
frozen = true

[[plugins]]
repo = 'junegunn/fzf.vim'
if = 'executable("fzf")'
depends = ['fzf']
on_func = ['fzf#']
on_cmd = [
  'Files',
  'GitFiles',
  'GFiles',
  'Buffers',
  'Lines',
  'BLines',
  'Colors',
  'Locate',
  'Ag',
  'Rg',
  'Tags',
  'BTags',
  'Snippets',
  'Commands',
  'Marks',
  'Helptags',
  'Windows',
  'Commits',
  'BCommits',
  'Maps',
  'Filetypes',
  'History'
]
hook_add = '''
  call plugin#fzf#set_variables()
  call plugin#fzf#set_maps()
  call plugin#fzf#set_commands()
'''

[[plugins]]
repo = 'akinsho/nvim-toggleterm.lua'
on_cmd = [
  'ToggleTerm',
  'TermExec',
  'Yarn',
]
on_map = {
  ni = '<C-t>',
}
hook_post_source = '''
  lua require('plugins/toggleterm')
'''

[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
on_event = ['CursorHold', 'CursorMoved', 'InsertEnter', 'CmdlineEnter']
hook_post_source = '''
  lua require('plugins/bqf')
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
hook_post_source = '''
  lua require('plugins/autopairs')
'''

[[plugins]]
repo = 'numToStr/Comment.nvim'
hook_post_source = '''
  lua require('plugins/comment')
'''

[[plugins]]
repo = 'andymass/vim-matchup'
on_event = ['BufRead']
hook_add = '''
  let g:matchup_matchparen_offscreen = {}
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
on_func = [
  'FugitiveGitDir'
]
on_cmd = [
  'G',
  'Git',
  'Ggrep',
  'Glgrep',
  'Gclog',
  'Gllog',
  'Gcd',
  'Glcd',
  'Gedit',
  'Gsplit',
  'Gvsplit',
  'Gtabedit',
  'Gpedit',
  'Gread',
  'Gwrite',
  'Gwq',
  'Gdiffsplit',
  'Gvdiffsplit',
  'Ghdiffsplit',
  'GMove',
  'GRename',
  'GDelete',
  'GRemove',
  'GBrowse',
]
hook_add ='''
  call plugin#fugitive#set_maps()
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = ['BufRead']
hook_post_source = '''
  lua require('plugins/gitsigns')
'''

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
on_event = ['BufRead']
hook_add = '''
  let g:conflict_marker_enable_mappings = 0
  let g:conflict_marker_highlight_group = ''
  let g:conflict_marker_begin = '^<<<<<<< .*$'
  let g:conflict_marker_end   = '^>>>>>>> .*$'
  let g:conflict_marker_common_ancestors = '^||||||| .*$'
  nmap ]f <Plug>(conflict-marker-next-hunk)
  nmap [f <Plug>(conflict-marker-prev-hunk)
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_lua = ['plenary']

[[plugins]]
repo = 'notomo/lreload.nvim'
on_ft = ['lua']
hook_post_source = '''
  lua require('lreload').enable('plugins')
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = ['BufRead', 'CmdlineEnter']
hook_post_source = '''
  lua require('plugins/lsp')
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
depends = ['plenary.nvim']
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
on_source = ['nvim-lspconfig']
hook_post_source = '''
  lua require('plugins/lsp/signature')
'''

[[plugins]]
repo = 'hrsh7th/nvim-cmp'
on_event = ['InsertEnter']
hook_post_source = '''
  lua require('plugins/cmp')
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_source = ['nvim-cmp']

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
on_source = ['nvim-lspconfig']

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = ['nvim-cmp']

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = ['nvim-cmp']

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'
hook_add = '''
  let g:cursorhold_updatetime = 100
'''

[[plugins]]
repo = 'hexium310/diffmt.nvim'
hook_add = '''
  command! Diffmt lua require('diffmt').diff()
'''
